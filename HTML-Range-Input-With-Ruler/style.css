*::before,
*::after,
* {
  margin: 0;
  padding: 0;
  color: inherit;
  font: inherit;
}
html,
body,
form,
form * {
  display: grid;
}
html {
  height: 100%;
}

body,
datalist {
  place-content: center;
}

body {
  font: 1em/1.25 ubuntu, sans-serif;
}

form,
option {
  place-items: center;
  /* place-content: center; */
}
datalist {
  grid-auto-flow: column;
}
form {
  --extra: 0;
  --large: 0;
  --not-large: calc(1 - var(--large));
  --small: 0;
  --not-small: calc(1 - var(--small));
  --track-w: min(25em, 100vw - 2 * 1.75em);
  overflow-x: hidden;
  padding: 0.875em;
  background: hsla(0, 0%, 91%, var(--hl));
  filter: grayScale(calc(1 - var(--hl, 0)));
  transition: 0.35s;
}
@media (min-width: 28.5em) {
  form {
    --extra: 1;
  }
}
@media (min-width: 320px) {
  form {
    --large: 1;
  }
}
@media (max-width: 220px) {
  form {
    --small: 1;
  }
}
form:focus-within,
form:hover {
  --hl: 1;
}
label {
  font-size: 137.5%;
}

[for] {
  font-weight: 700;
}
input {
  width: calc(var(--track-w) + 1.75em);
  background: linear-gradient(90deg, #15b190 25%, #f7c742 0 75%, #b1154c 0) 50% /
    var(--track-w) 0.375em no-repeat;
  cursor: pointer;
}
input::-webkit-slider-thumb {
  margin-top: -0.35em;
  border: none;
  width: 1.75em;
  height: 1.75em;
  background: currentcolor;
  --poly: polygon(50% 100%, 6.6987298108% 25%, 93.3012701892% 25%);
  -webkit-clip-path: var(--poly);
  clip-path: var(--poly);
  cursor: ew-resize;
}
input::-moz-range-thumb {
  margin-top: -0.35em;
  border: none;
  width: 1.75em;
  height: 1.75em;
  background: currentcolor;
  --poly: polygon(50% 100%, 6.6987298108% 25%, 93.3012701892% 25%);
  -webkit-clip-path: var(--poly);
  clip-path: var(--poly);
  cursor: ew-resize;
}
input:focus {
  outline: none;
}
input + output {
  --rng: calc(var(--max) - var(--min));
  --pos: calc((var(--val) - var(--min)) / var(--rng) * var(--track-w));
  display: var(--js, none);
  grid-row: 2;
  justify-self: start;
  transform: translate(calc(0.5 * 1.75em + var(--pos) - 50%));
  counter-reset: val var(--val);
}
input + output::after {
  content: counter(val);
}
datalist {
  --track-u: calc(var(--track-w) / var(--n));
  grid-auto-flow: column;
  width: calc(var(--track-w) + 1px);
  box-shadow: inset 0 1px currentcolor;
  background: linear-gradient(90deg, currentcolor 1px, transparent 0) repeat-x;
  background-size: calc(var(--track-u) / 5) calc(var(--extra) * 0.5 * 0.875em);
}
option {
  --m: calc(var(--large));
  width: calc(var(--m) * var(--track-u));
  transform-origin: 50% 0;
  transform: scale(min(1, var(--m)));
  transition: transform 0.35s;
}
option:nth-child(odd) {
  --m: calc(var(--large) + 2 * var(--not-large) * var(--not-small));
}
option:first-child,
option:last-child {
  --m: calc(
    var(--large) + var(--not-large) *
      (2 * var(--not-small) + 0.5 * var(--n) * var(--small))
  );
}
option.mid {
  --m: calc(var(--large) + var(--not-large) * 0.5 * var(--n) * var(--small));
}
option::before {
  width: 1px;
  height: 0.875em;
  background: currentcolor;
  content: "";
}
